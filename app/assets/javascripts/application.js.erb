// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, or any plugin's
// vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file. JavaScript code in this file should be added after the last require_* statement.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require rails-ujs
//= require activestorage
//= require turbolinks
//= require_tree .
//= require phaser


var game = new Phaser.Game(1000, 480, Phaser.AUTO, '', { preload: preload, create: create, update: update });

function preload() {
  game.load.image('background', '<%= image_path('background.png') %>');
  game.load.image('coffee', '<%= image_path('coffee.png') %>');
  game.load.image('ground', '<%= image_path('barrel.png') %>');

  game.load.image('diamond', '<%= image_path('vodka.png') %>');
  game.load.spritesheet('dude', '<%= image_path('dude.png') %>', 45, 48);
}

var player;
var platforms;
var cursors;
var coffees;
var diamonds;
var score = 0;
var scoreText;

// *********
// LOADING IMAGES TO SCREEN



// ****************** CREATING PLAYER AND MOVEMENTS
function create() {

    game.physics.startSystem(Phaser.Physics.ARCADE);

game.world.setBounds(110, 0);

    game.add.sprite(0, 0, 'background');


    platforms = game.add.group();


    platforms.enableBody = true;




    var ground = platforms.create(0, game.world.height - 100, 'ground');

    ground.scale.setTo(2, 2);

    ground.body.immovable = true;

    var ledge = platforms.create(-250,200, 'ground');
    ledge.body.immovable = true;

    ledge = platforms.create(250,300, 'ground');

    ledge.body.immovable = true;

    player = game.add.sprite(32, game.world.height - 150, 'dude');

    game.physics.arcade.enable(player);

    player.body.bounce.y = 0.2;
    player.body.gravity.y = 400;
    player.body.collideWorldBounds = true;

    player.animations.add('left', [3,4, 5], 10, true);
    player.animations.add('right', [ 6,7,8], 10, true);


  coffees = game.add.group();

  coffees.enableBody = true;
        for (var i = 0; i < 10; i++)
        {
          var coffee = coffees.create(i * 70, 20, 'coffee');

          coffee.body.gravity.y = 700;

          coffee.body.bounce.y = 0.5 + Math.random() * 0.5;
        }

        diamonds = game.add.group();

        diamonds.enableBody = true;
    for (var i = 0; i < 20; i++)
    {
        var diamond = diamonds.create(i * 80, 0, 'diamond');

        diamond.body.gravity.y = 900;

        diamond.body.bounce.y = 0.2 + Math.random() * 0.2;
    }

    for (var i = 0; i < 20; i++)
    {
        var ledge = platforms.create(i * 125, 180, 'ground');
        ledge.body.immovable = true;

        ground.body.bounce.y = 0.2 + Math.random() * 0.2;
    }

    scoreText = game.add.text(16, 16, 'Drinks: 0', { fontSize: '32px', fill: 'black' });

    cursors = game.input.keyboard.createCursorKeys();
}

// *********************************************
 // UPDATING MOVEMENT AND GRAVITY WITH SCORE ADDED

function update() {
    var hitPlatform = game.physics.arcade.collide(player, platforms);
    game.physics.arcade.collide(diamonds, platforms);

    game.physics.arcade.overlap(player, diamonds, collectDiamond, null, this)

    game.physics.arcade.collide(coffees, platforms);
    game.physics.arcade.overlap(player, coffees, collectCoffee, null, this)


    player.body.velocity.x = 0;

    cursors = game.input.keyboard.createCursorKeys();

    if (cursors.left.isDown)
    {
        player.body.velocity.x = -150;

        player.animations.play('left');
    }
    else if (cursors.right.isDown)
    {
        player.body.velocity.x = 150;

        player.animations.play('right');
    }
    else
    {
        player.animations.stop();

        player.frame = 1;
    }

    if (cursors.up.isDown && player.body.touching.down && hitPlatform)
    {
        player.body.velocity.y = -350;
    }

    if (score === 3) {
      game.world.setBounds(500, 0);
       alert('You are drunk! Go Home!!')
       score = 0
     }

}

function collectDiamond (player, diamond) {
  diamond.kill()

  score += 1
  scoreText.text = 'Drinks: ' + score
}

function collectCoffee (player, coffee) {
  coffee.kill()
  score -= 1
  scoreText.text = 'Drinks' - score
}
